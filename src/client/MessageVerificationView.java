package client;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import model.MessageCache;

/**
 *
 * @author Charley
 */
public class MessageVerificationView extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form NewJFrame
     */
    public MessageVerificationView() {
        initComponents();
    }
    
    public MessageVerificationView(MessageCache messageCache, SocketChannel socketChannel) {
    	this.messageCache = messageCache;
    	this.socketChannel = socketChannel;
    	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jToolBar1 = new javax.swing.JToolBar();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        agreeButton = new javax.swing.JButton();
        refuseButton = new javax.swing.JButton();
        messageTypeLabel = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
        );

        jToolBar1.setRollover(true);

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("验证信息");

        messageTextArea.setEditable(false);
        messageTextArea.setColumns(20);
        messageTextArea.setLineWrap(true);
        messageTextArea.setRows(5);
        messageTextArea.setText("\n\n" + messageCache.getContent());
        jScrollPane1.setViewportView(messageTextArea);

        if (messageCache.getMessage_type() != 0 && messageCache.getMessage_type() != -1) {
        	System.out.println(messageCache.getMessage_type());
        	agreeButton.setVisible(false);
        	refuseButton.setVisible(false);
        }
        else {
        	agreeButton.setText("同意");
            agreeButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    agreeButtonActionPerformed(evt);
                }
            });

            refuseButton.setText("拒绝");
            refuseButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    refuseButtonActionPerformed(evt);
                }
            });
        }
        

        if (messageCache.getMessage_type() == 0) {
        	messageTypeLabel.setText("朋友验证");
        }
        else if (messageCache.getMessage_type() == -1) {
        	messageTypeLabel.setText("进群验证");
        }
        else {
        	messageTypeLabel.setText("验证结果");
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(agreeButton)
                        .addGap(18, 18, 18)
                        .addComponent(refuseButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(messageTypeLabel)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(messageTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agreeButton)
                    .addComponent(refuseButton))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void agreeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        
    	StringBuilder strAgree = new StringBuilder();
    	strAgree.append(messageCache.getTo_account());
    	strAgree.append("-modifyfriend-add-");
    	strAgree.append(messageCache.getFrom_account());
    	strAgree.append("- -succeed");
    	try {
			byte[] byteAgree = strAgree.toString().getBytes("UTF-8");
			int length = byteAgree.length;
			ByteBuffer buffer = ByteBuffer.allocate(4 + length);
			buffer.putInt(length);
			buffer.put(byteAgree);
			buffer.flip();
			while(buffer.hasRemaining()) {
				socketChannel.write(buffer);
			}
		} catch (IOException e) {
			System.err.println(e);
		}
    	this.dispose();
    }                                           

    private void refuseButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        
    	StringBuilder strRefuse = new StringBuilder();
    	strRefuse.append(messageCache.getTo_account());
    	strRefuse.append("-modifyfriend-add-");
    	strRefuse.append(messageCache.getFrom_account());
    	strRefuse.append("- -failed");
    	try {
    		System.out.println(strRefuse);
			byte[] byteRefuse = strRefuse.toString().getBytes("UTF-8");
			int length = byteRefuse.length;
			ByteBuffer buffer = ByteBuffer.allocate(4 + length);
			buffer.putInt(length);
			buffer.put(byteRefuse);
			buffer.flip();
			while(buffer.hasRemaining()) {
				socketChannel.write(buffer);
			}
		} catch (IOException e) {
			System.err.println(e);
		}
    	this.dispose();
    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MessageVerificationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MessageVerificationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MessageVerificationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MessageVerificationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	MessageVerificationView messageVerificationView = new MessageVerificationView();
            	messageVerificationView.setLocationRelativeTo(null);
                messageVerificationView.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton agreeButton;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JLabel messageTypeLabel;
    private javax.swing.JButton refuseButton;
    
    private MessageCache messageCache = null;
    private SocketChannel socketChannel = null;
    // End of variables declaration                   
}
